current.directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(current.directory)
library(data.table)
library(stringr)
all_info <- fread("1000genomes_samples.tsv")
View(all_info)
samples <- fread("ALL.chr1.fam")
View(samples)
samples <- fread("ALL.chr1.fam")$V1
sum(samples %in% all_info$`Sample name`)
all_info[, `Sample name` %in% samples]
all_info[`Sample name` %in% samples]
all_info <- all_info[`Sample name` %in% samples]
View(all_info)
sum(all_info$`Superpopulation code`=="EUR")
current.directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(current.directory)
library(data.table)
library(stringr)
all_info <- fread("1000genomes_samples.tsv")
samples <- fread("ALL.chr1.fam")$V1
sum(samples %in% all_info$`Sample name`)
#2504 samples
all_info <- all_info[`Sample name` %in% samples]
sum(all_info$`Superpopulation code`=="EUR")
# 503
#--keep accepts a space/tab-delimited text file with family IDs in the first column
#  and within-family IDs in the second column
Finnish <- all_info$s
Finnish <- all_info[`Population name`=='Finnish']$`Sample name`
nation_to_keep <- function(nation){
ids <- all_info[`Population name`==nation]$`Sample name`
df <- data.frame("V1"=ids, "V2" = ids)
write.table(df, file=paste(nation,"keep", sep="."))
}
nation_to_keep("Finnish")
write.table(df, file=paste(nation,"keep", sep="."), col.names = F, row.names = F, quote = F)
nation_to_keep <- function(nation){
ids <- all_info[`Population name`==nation]$`Sample name`
df <- data.frame("V1"=ids, "V2" = ids)
write.table(df, file=paste(nation,"keep", sep="."), col.names = F, row.names = F, quote = F)
}
nation_to_keep("Finnish")
nation_to_keep("Brittish")
nation_to_keep("British")
unique(all_info$`Population name`)
nation_to_keep("Indian")
nations <- unique(all_info$`Population name`)
current.directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(current.directory)
library(data.table)
library(stringr)
all_info <- fread("1000genomes_samples.tsv")
samples <- fread("ALL.chr1.fam")$V1
sum(samples %in% all_info$`Sample name`)
#2504 samples
all_info <- all_info[`Sample name` %in% samples]
sum(all_info$`Superpopulation code`=="EUR")
# 503
#--keep accepts a space/tab-delimited text file with family IDs in the first column
#  and within-family IDs in the second column
nation_to_keep <- function(nation){
ids <- all_info[`Population name`==nation]$`Sample name`
df <- data.frame("V1"=ids, "V2" = ids)
write.table(df, file=paste("samples_by_nation"/nation,"keep", sep="."), col.names = F, row.names = F, quote = F)
}
nations <- unique(all_info$`Population name`)
sapply(nations, nation_to_keep)
current.directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(current.directory)
library(data.table)
library(stringr)
all_info <- fread("1000genomes_samples.tsv")
samples <- fread("ALL.chr1.fam")$V1
sum(samples %in% all_info$`Sample name`)
#2504 samples
all_info <- all_info[`Sample name` %in% samples]
sum(all_info$`Superpopulation code`=="EUR")
# 503
#--keep accepts a space/tab-delimited text file with family IDs in the first column
#  and within-family IDs in the second column
nation_to_keep <- function(nation){
ids <- all_info[`Population name`==nation]$`Sample name`
df <- data.frame("V1"=ids, "V2" = ids)
write.table(df, file=paste("samples_by_nation/"nation,"keep", sep="."), col.names = F, row.names = F, quote = F)
}
nations <- unique(all_info$`Population name`)
sapply(nations, nation_to_keep)
current.directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(current.directory)
library(data.table)
library(stringr)
all_info <- fread("1000genomes_samples.tsv")
samples <- fread("ALL.chr1.fam")$V1
sum(samples %in% all_info$`Sample name`)
#2504 samples
all_info <- all_info[`Sample name` %in% samples]
sum(all_info$`Superpopulation code`=="EUR")
# 503
#--keep accepts a space/tab-delimited text file with family IDs in the first column
#  and within-family IDs in the second column
nation_to_keep <- function(nation){
ids <- all_info[`Population name`==nation]$`Sample name`
df <- data.frame("V1"=ids, "V2" = ids)
write.table(df, file=paste("samples_by_nation/",nation,"keep", sep="."), col.names = F, row.names = F, quote = F)
}
nations <- unique(all_info$`Population name`)
sapply(nations, nation_to_keep)
current.directory <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(current.directory)
library(data.table)
library(stringr)
all_info <- fread("1000genomes_samples.tsv")
samples <- fread("ALL.chr1.fam")$V1
sum(samples %in% all_info$`Sample name`)
#2504 samples
all_info <- all_info[`Sample name` %in% samples]
sum(all_info$`Superpopulation code`=="EUR")
# 503
#--keep accepts a space/tab-delimited text file with family IDs in the first column
#  and within-family IDs in the second column
nation_to_keep <- function(nation){
ids <- all_info[`Population name`==nation]$`Sample name`
df <- data.frame("V1"=ids, "V2" = ids)
write.table(df, file=paste("samples_by_nation/",nation,"keep", sep="."), col.names = F, row.names = F, quote = F)
return(0)}
nations <- unique(all_info$`Population name`)
sapply(nations, nation_to_keep)
lapply(nations, function(x), nation_to_keep(x))
lapply(nations, function(x) nation_to_keep(x))
for (nation in nations) {nation_to_keep(nation)}
nation_to_keep("Brittish")
write.table(df, file=paste("samples_by_nation/",nation,".keep", sep=""), col.names = F, row.names = F, quote = F)
return(0)}
return(0)}
return(0)}
return(0)}
nation_to_keep <- function(nation){
ids <- all_info[`Population name`==nation]$`Sample name`
df <- data.frame("V1"=ids, "V2" = ids)
write.table(df, file=paste("samples_by_nation/",nation,".keep", sep=""),
col.names = F, row.names = F, quote = F)
return(0)}
nations <- unique(all_info$`Population name`)
lapply(nations, function(x) nation_to_keep(x))
nation_to_keep <- function(nation){
ids <- all_info[`Population name`==nation]$`Sample name`
df <- data.frame("V1"=ids, "V2" = ids)
write.table(df, file=paste("samples_by_nation/",nation,".keep", sep=""),
col.names = F, row.names = F, quote = F)
}
nations <- unique(all_info$`Population name`)
sapply(nations, function(x) nation_to_keep(x))
require(GenABEL)
